{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abami\\\\OneDrive\\\\Desktop\\\\Projects\\\\stretch app\\\\src\\\\components\\\\PreferencesForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GOALS, BODY_PARTS, DIFFICULTY_LEVELS, validateRoutinePreferences } from '../routineGenerator';\nimport { EQUIPMENT_TYPES, EQUIPMENT_INFO } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PreferencesForm = ({\n  onGenerate,\n  stats\n}) => {\n  _s();\n  const [duration, setDuration] = useState(10);\n  const [goals, setGoals] = useState([]);\n  const [bodyParts, setBodyParts] = useState([]);\n  const [equipment, setEquipment] = useState(['none']);\n  const [difficulty, setDifficulty] = useState(DIFFICULTY_LEVELS.BEGINNER);\n  const [energyLevel, setEnergyLevel] = useState('medium');\n  const [timeOfDay, setTimeOfDay] = useState(() => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'morning';\n    if (hour < 17) return 'midday';\n    return 'evening';\n  });\n  const [problems, setProblems] = useState([]);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const quickStartOptions = [{\n    id: 'morning',\n    icon: 'wb_sunny',\n    iconColor: '#ff9800',\n    title: 'Morning Routine',\n    subtitle: '10 min energizing',\n    preset: () => {\n      setGoals([GOALS.MORNING_WAKE_UP]);\n      setBodyParts([BODY_PARTS.FULL_BODY]);\n      setEnergyLevel('medium');\n      setDuration(10);\n      setEquipment(['none']);\n    }\n  }, {\n    id: 'desk',\n    icon: 'desktop_windows',\n    iconColor: '#2196f3',\n    title: 'Desk Break',\n    subtitle: '5 min neck & shoulders',\n    preset: () => {\n      setGoals([GOALS.DESK_BREAK]);\n      setBodyParts([BODY_PARTS.NECK, BODY_PARTS.SHOULDERS, BODY_PARTS.UPPER_BACK]);\n      setEnergyLevel('low');\n      setDuration(5);\n      setEquipment(['wall', 'chair']);\n    }\n  }, {\n    id: 'workout',\n    icon: 'fitness_center',\n    iconColor: '#9c27b0',\n    title: 'Post-Workout',\n    subtitle: '15 min recovery',\n    preset: () => {\n      setGoals([GOALS.POST_WORKOUT]);\n      setBodyParts([BODY_PARTS.LEGS, BODY_PARTS.HIPS]);\n      setEnergyLevel('low');\n      setDuration(15);\n      setEquipment(['foam_roller', 'mat']);\n    }\n  }, {\n    id: 'bedtime',\n    icon: 'bedtime',\n    iconColor: '#3f51b5',\n    title: 'Bedtime',\n    subtitle: '10 min relaxing',\n    preset: () => {\n      setGoals([GOALS.BEDTIME_RELAX]);\n      setBodyParts([BODY_PARTS.FULL_BODY]);\n      setEnergyLevel('low');\n      setDuration(10);\n      setEquipment(['mat']);\n    }\n  }];\n  const goalOptions = [{\n    value: GOALS.MORNING_WAKE_UP,\n    label: 'Morning Wake-up',\n    description: 'Energize and activate your body',\n    icon: '🌅'\n  }, {\n    value: GOALS.PRE_WORKOUT,\n    label: 'Pre-workout',\n    description: 'Prepare your muscles for exercise',\n    icon: '🏋️'\n  }, {\n    value: GOALS.POST_WORKOUT,\n    label: 'Post-workout',\n    description: 'Recovery and cool down',\n    icon: '🧘'\n  }, {\n    value: GOALS.DESK_BREAK,\n    label: 'Desk Break',\n    description: 'Counter sitting posture',\n    icon: '💻'\n  }, {\n    value: GOALS.STRESS_RELIEF,\n    label: 'Relaxation',\n    description: 'Calm your mind and body',\n    icon: '🌙'\n  }, {\n    value: GOALS.BEDTIME_RELAX,\n    label: 'Bedtime Relax',\n    description: 'Prepare for restful sleep',\n    icon: '😴'\n  }, {\n    value: GOALS.PAIN_RELIEF,\n    label: 'Pain Relief',\n    description: 'Target specific discomfort',\n    icon: '🩹'\n  }, {\n    value: GOALS.FLEXIBILITY,\n    label: 'Flexibility',\n    description: 'Improve range of motion',\n    icon: '🤸'\n  }];\n  const bodyPartOptions = [{\n    value: BODY_PARTS.NECK,\n    label: 'Neck',\n    icon: '🦴'\n  }, {\n    value: BODY_PARTS.SHOULDERS,\n    label: 'Shoulders',\n    icon: '💪'\n  }, {\n    value: BODY_PARTS.UPPER_BACK,\n    label: 'Upper Back',\n    icon: '⬆️'\n  }, {\n    value: BODY_PARTS.LOWER_BACK,\n    label: 'Lower Back',\n    icon: '⬇️'\n  }, {\n    value: BODY_PARTS.CHEST,\n    label: 'Chest',\n    icon: '❤️'\n  }, {\n    value: BODY_PARTS.ARMS,\n    label: 'Arms',\n    icon: '💪'\n  }, {\n    value: BODY_PARTS.HIPS,\n    label: 'Hips',\n    icon: '🦴'\n  }, {\n    value: BODY_PARTS.LEGS,\n    label: 'Legs',\n    icon: '🦵'\n  }, {\n    value: BODY_PARTS.CALVES,\n    label: 'Calves',\n    icon: '🦶'\n  }, {\n    value: BODY_PARTS.FULL_BODY,\n    label: 'Full Body',\n    icon: '🧘'\n  }];\n  const handleGoalToggle = goal => {\n    setGoals(prev => prev.includes(goal) ? prev.filter(g => g !== goal) : [...prev, goal]);\n  };\n  const handleBodyPartToggle = bodyPart => {\n    setBodyParts(prev => prev.includes(bodyPart) ? prev.filter(bp => bp !== bodyPart) : [...prev, bodyPart]);\n  };\n  const handleEquipmentToggle = equipmentType => {\n    setEquipment(prev => {\n      if (equipmentType === 'none') {\n        return ['none'];\n      }\n      const filtered = prev.filter(e => e !== 'none');\n      return filtered.includes(equipmentType) ? filtered.filter(e => e !== equipmentType) : [...filtered, equipmentType];\n    });\n  };\n  const handleProblemToggle = problem => {\n    setProblems(prev => prev.includes(problem) ? prev.filter(p => p !== problem) : [...prev, problem]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const preferences = {\n      duration: duration * 60,\n      goals,\n      bodyParts: bodyParts.length > 0 ? bodyParts : [BODY_PARTS.FULL_BODY],\n      equipment: equipment.length === 0 ? ['none'] : equipment,\n      difficulty,\n      energyLevel,\n      timeOfDay,\n      problems\n    };\n    const validation = validateRoutinePreferences(preferences);\n    if (!validation.isValid) {\n      alert(validation.error);\n      return;\n    }\n    setIsGenerating(true);\n    try {\n      await onGenerate(preferences);\n    } catch (error) {\n      console.error('Error generating routine:', error);\n      alert('Failed to generate routine. Please try again.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const durationOptions = [5, 10, 15, 20, 30];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"preferences-form\",\n    children: [stats.totalSessions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome back! You've completed \", stats.totalSessions, \" sessions \\uD83C\\uDF89\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Quick Start (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-start-grid\",\n        children: quickStartOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-start-tag\",\n          onClick: option.preset,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons\",\n            style: {\n              color: option.iconColor\n            },\n            children: option.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 500,\n                marginBottom: '0.125rem'\n              },\n              children: option.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '0.75rem',\n                color: '#64748b'\n              },\n              children: option.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"How much time do you have?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"duration-selector\",\n        children: durationOptions.map(time => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `time-button ${duration === time ? 'active' : ''}`,\n          onClick: () => setDuration(time),\n          children: [time, \"min\"]\n        }, time, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"What's your main goal today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goal-grid\",\n        children: goalOptions.map(goal => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `goal-card ${goals.includes(goal.value) ? 'active' : ''}`,\n          onClick: () => handleGoalToggle(goal.value),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"goal-icon\",\n            children: goal.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"goal-card-title\",\n              children: goal.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"goal-card-description\",\n              children: goal.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons\",\n            children: \"chevron_right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, goal.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Which areas to focus on?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-input\",\n        value: bodyParts,\n        onChange: e => {\n          const selected = Array.from(e.target.selectedOptions, option => option.value);\n          setBodyParts(selected);\n        },\n        multiple: true,\n        style: {\n          width: '100%',\n          minHeight: '80px',\n          marginBottom: '1rem'\n        },\n        children: bodyPartOptions.map(part => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: part.value,\n          children: [part.icon, \" \", part.label]\n        }, part.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Available Equipment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"equipment-grid\",\n        children: Object.entries(EQUIPMENT_INFO).map(([key, info]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `equipment-card ${equipment.includes(key) ? 'active' : ''}`,\n          onClick: () => handleEquipmentToggle(key),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"equipment-icon\",\n            children: info.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"equipment-name\",\n            children: info.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"equipment-desc\",\n            children: info.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Difficulty Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-input\",\n        value: difficulty,\n        onChange: e => setDifficulty(e.target.value),\n        style: {\n          width: '100%',\n          marginBottom: '1rem'\n        },\n        children: Object.values(DIFFICULTY_LEVELS).map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: level,\n          children: level.charAt(0).toUpperCase() + level.slice(1)\n        }, level, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      disabled: isGenerating || goals.length === 0,\n      children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner\",\n          style: {\n            display: 'inline-block',\n            width: '16px',\n            height: '16px',\n            border: '2px solid white',\n            borderTopColor: 'transparent',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            marginRight: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), \"Generating your routine...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Generate My Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(PreferencesForm, \"x4PLjKxZ3r8KA3QCUfxBqGC+Se8=\");\n_c = PreferencesForm;\nexport default PreferencesForm;\nvar _c;\n$RefreshReg$(_c, \"PreferencesForm\");","map":{"version":3,"names":["React","useState","GOALS","BODY_PARTS","DIFFICULTY_LEVELS","validateRoutinePreferences","EQUIPMENT_TYPES","EQUIPMENT_INFO","jsxDEV","_jsxDEV","Fragment","_Fragment","PreferencesForm","onGenerate","stats","_s","duration","setDuration","goals","setGoals","bodyParts","setBodyParts","equipment","setEquipment","difficulty","setDifficulty","BEGINNER","energyLevel","setEnergyLevel","timeOfDay","setTimeOfDay","hour","Date","getHours","problems","setProblems","isGenerating","setIsGenerating","quickStartOptions","id","icon","iconColor","title","subtitle","preset","MORNING_WAKE_UP","FULL_BODY","DESK_BREAK","NECK","SHOULDERS","UPPER_BACK","POST_WORKOUT","LEGS","HIPS","BEDTIME_RELAX","goalOptions","value","label","description","PRE_WORKOUT","STRESS_RELIEF","PAIN_RELIEF","FLEXIBILITY","bodyPartOptions","LOWER_BACK","CHEST","ARMS","CALVES","handleGoalToggle","goal","prev","includes","filter","g","handleBodyPartToggle","bodyPart","bp","handleEquipmentToggle","equipmentType","filtered","e","handleProblemToggle","problem","p","handleSubmit","preventDefault","preferences","length","validation","isValid","alert","error","console","durationOptions","onSubmit","className","children","totalSessions","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","style","color","fontWeight","marginBottom","fontSize","time","type","onChange","selected","Array","from","target","selectedOptions","multiple","width","minHeight","part","Object","entries","key","info","name","values","level","charAt","toUpperCase","slice","disabled","display","height","border","borderTopColor","borderRadius","animation","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/abami/OneDrive/Desktop/Projects/stretch app/src/components/PreferencesForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { GOALS, BODY_PARTS, DIFFICULTY_LEVELS, validateRoutinePreferences } from '../routineGenerator'\nimport { EQUIPMENT_TYPES, EQUIPMENT_INFO } from '../services/api'\n\nconst PreferencesForm = ({ onGenerate, stats }) => {\n  const [duration, setDuration] = useState(10)\n  const [goals, setGoals] = useState([])\n  const [bodyParts, setBodyParts] = useState([])\n  const [equipment, setEquipment] = useState(['none'])\n  const [difficulty, setDifficulty] = useState(DIFFICULTY_LEVELS.BEGINNER)\n  const [energyLevel, setEnergyLevel] = useState('medium')\n  const [timeOfDay, setTimeOfDay] = useState(() => {\n    const hour = new Date().getHours()\n    if (hour < 12) return 'morning'\n    if (hour < 17) return 'midday'\n    return 'evening'\n  })\n  const [problems, setProblems] = useState([])\n  const [isGenerating, setIsGenerating] = useState(false)\n\n  const quickStartOptions = [\n    {\n      id: 'morning',\n      icon: 'wb_sunny',\n      iconColor: '#ff9800',\n      title: 'Morning Routine',\n      subtitle: '10 min energizing',\n      preset: () => {\n        setGoals([GOALS.MORNING_WAKE_UP])\n        setBodyParts([BODY_PARTS.FULL_BODY])\n        setEnergyLevel('medium')\n        setDuration(10)\n        setEquipment(['none'])\n      }\n    },\n    {\n      id: 'desk',\n      icon: 'desktop_windows',\n      iconColor: '#2196f3',\n      title: 'Desk Break',\n      subtitle: '5 min neck & shoulders',\n      preset: () => {\n        setGoals([GOALS.DESK_BREAK])\n        setBodyParts([BODY_PARTS.NECK, BODY_PARTS.SHOULDERS, BODY_PARTS.UPPER_BACK])\n        setEnergyLevel('low')\n        setDuration(5)\n        setEquipment(['wall', 'chair'])\n      }\n    },\n    {\n      id: 'workout',\n      icon: 'fitness_center',\n      iconColor: '#9c27b0',\n      title: 'Post-Workout',\n      subtitle: '15 min recovery',\n      preset: () => {\n        setGoals([GOALS.POST_WORKOUT])\n        setBodyParts([BODY_PARTS.LEGS, BODY_PARTS.HIPS])\n        setEnergyLevel('low')\n        setDuration(15)\n        setEquipment(['foam_roller', 'mat'])\n      }\n    },\n    {\n      id: 'bedtime',\n      icon: 'bedtime',\n      iconColor: '#3f51b5',\n      title: 'Bedtime',\n      subtitle: '10 min relaxing',\n      preset: () => {\n        setGoals([GOALS.BEDTIME_RELAX])\n        setBodyParts([BODY_PARTS.FULL_BODY])\n        setEnergyLevel('low')\n        setDuration(10)\n        setEquipment(['mat'])\n      }\n    }\n  ]\n\n  const goalOptions = [\n    { \n      value: GOALS.MORNING_WAKE_UP, \n      label: 'Morning Wake-up', \n      description: 'Energize and activate your body',\n      icon: '🌅'\n    },\n    { \n      value: GOALS.PRE_WORKOUT, \n      label: 'Pre-workout', \n      description: 'Prepare your muscles for exercise',\n      icon: '🏋️'\n    },\n    { \n      value: GOALS.POST_WORKOUT, \n      label: 'Post-workout', \n      description: 'Recovery and cool down',\n      icon: '🧘'\n    },\n    { \n      value: GOALS.DESK_BREAK, \n      label: 'Desk Break', \n      description: 'Counter sitting posture',\n      icon: '💻'\n    },\n    { \n      value: GOALS.STRESS_RELIEF, \n      label: 'Relaxation', \n      description: 'Calm your mind and body',\n      icon: '🌙'\n    },\n    { \n      value: GOALS.BEDTIME_RELAX, \n      label: 'Bedtime Relax', \n      description: 'Prepare for restful sleep',\n      icon: '😴'\n    },\n    { \n      value: GOALS.PAIN_RELIEF, \n      label: 'Pain Relief', \n      description: 'Target specific discomfort',\n      icon: '🩹'\n    },\n    { \n      value: GOALS.FLEXIBILITY, \n      label: 'Flexibility', \n      description: 'Improve range of motion',\n      icon: '🤸'\n    }\n  ]\n\n  const bodyPartOptions = [\n    { value: BODY_PARTS.NECK, label: 'Neck', icon: '🦴' },\n    { value: BODY_PARTS.SHOULDERS, label: 'Shoulders', icon: '💪' },\n    { value: BODY_PARTS.UPPER_BACK, label: 'Upper Back', icon: '⬆️' },\n    { value: BODY_PARTS.LOWER_BACK, label: 'Lower Back', icon: '⬇️' },\n    { value: BODY_PARTS.CHEST, label: 'Chest', icon: '❤️' },\n    { value: BODY_PARTS.ARMS, label: 'Arms', icon: '💪' },\n    { value: BODY_PARTS.HIPS, label: 'Hips', icon: '🦴' },\n    { value: BODY_PARTS.LEGS, label: 'Legs', icon: '🦵' },\n    { value: BODY_PARTS.CALVES, label: 'Calves', icon: '🦶' },\n    { value: BODY_PARTS.FULL_BODY, label: 'Full Body', icon: '🧘' }\n  ]\n\n  const handleGoalToggle = (goal) => {\n    setGoals(prev => \n      prev.includes(goal) \n        ? prev.filter(g => g !== goal)\n        : [...prev, goal]\n    )\n  }\n\n  const handleBodyPartToggle = (bodyPart) => {\n    setBodyParts(prev => \n      prev.includes(bodyPart) \n        ? prev.filter(bp => bp !== bodyPart)\n        : [...prev, bodyPart]\n    )\n  }\n\n  const handleEquipmentToggle = (equipmentType) => {\n    setEquipment(prev => {\n      if (equipmentType === 'none') {\n        return ['none']\n      }\n      const filtered = prev.filter(e => e !== 'none')\n      return filtered.includes(equipmentType)\n        ? filtered.filter(e => e !== equipmentType)\n        : [...filtered, equipmentType]\n    })\n  }\n\n  const handleProblemToggle = (problem) => {\n    setProblems(prev => \n      prev.includes(problem) \n        ? prev.filter(p => p !== problem)\n        : [...prev, problem]\n    )\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    \n    const preferences = {\n      duration: duration * 60,\n      goals,\n      bodyParts: bodyParts.length > 0 ? bodyParts : [BODY_PARTS.FULL_BODY],\n      equipment: equipment.length === 0 ? ['none'] : equipment,\n      difficulty,\n      energyLevel,\n      timeOfDay,\n      problems\n    }\n\n    const validation = validateRoutinePreferences(preferences)\n    if (!validation.isValid) {\n      alert(validation.error)\n      return\n    }\n\n    setIsGenerating(true)\n    try {\n      await onGenerate(preferences)\n    } catch (error) {\n      console.error('Error generating routine:', error)\n      alert('Failed to generate routine. Please try again.')\n    } finally {\n      setIsGenerating(false)\n    }\n  }\n\n  const durationOptions = [5, 10, 15, 20, 30]\n\n  return (\n    <form onSubmit={handleSubmit} className=\"preferences-form\">\n      {/* Stats Summary */}\n      {stats.totalSessions > 0 && (\n        <div className=\"stats-summary\">\n          <p>Welcome back! You've completed {stats.totalSessions} sessions 🎉</p>\n        </div>\n      )}\n\n      {/* Quick Start Section */}\n      <section>\n        <h2 className=\"section-title\">Quick Start (Optional)</h2>\n        <div className=\"quick-start-grid\">\n          {quickStartOptions.map(option => (\n            <div\n              key={option.id}\n              className=\"quick-start-tag\"\n              onClick={option.preset}\n            >\n              <span \n                className=\"material-icons\" \n                style={{ color: option.iconColor }}\n              >\n                {option.icon}\n              </span>\n              <div>\n                <p style={{ fontWeight: 500, marginBottom: '0.125rem' }}>{option.title}</p>\n                <p style={{ fontSize: '0.75rem', color: '#64748b' }}>{option.subtitle}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Duration Selection */}\n      <section>\n        <h2 className=\"section-title\">How much time do you have?</h2>\n        <div className=\"duration-selector\">\n          {durationOptions.map(time => (\n            <button\n              key={time}\n              type=\"button\"\n              className={`time-button ${duration === time ? 'active' : ''}`}\n              onClick={() => setDuration(time)}\n            >\n              {time}min\n            </button>\n          ))}\n        </div>\n      </section>\n\n      {/* Goals Selection */}\n      <section>\n        <h2 className=\"section-title\">What's your main goal today?</h2>\n        <div className=\"goal-grid\">\n          {goalOptions.map(goal => (\n            <div\n              key={goal.value}\n              className={`goal-card ${goals.includes(goal.value) ? 'active' : ''}`}\n              onClick={() => handleGoalToggle(goal.value)}\n            >\n              <div className=\"goal-icon\">{goal.icon}</div>\n              <div>\n                <h3 className=\"goal-card-title\">{goal.label}</h3>\n                <p className=\"goal-card-description\">{goal.description}</p>\n              </div>\n              <span className=\"material-icons\">chevron_right</span>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Body Parts Selection */}\n      <section>\n        <h2 className=\"section-title\">Which areas to focus on?</h2>\n        <select\n          className=\"form-input\"\n          value={bodyParts}\n          onChange={e => {\n            const selected = Array.from(e.target.selectedOptions, option => option.value)\n            setBodyParts(selected)\n          }}\n          multiple\n          style={{ width: '100%', minHeight: '80px', marginBottom: '1rem' }}\n        >\n          {bodyPartOptions.map(part => (\n            <option key={part.value} value={part.value}>\n              {part.icon} {part.label}\n            </option>\n          ))}\n        </select>\n      </section>\n\n      {/* Equipment Selection */}\n      <section>\n        <h2 className=\"section-title\">Available Equipment</h2>\n        <div className=\"equipment-grid\">\n          {Object.entries(EQUIPMENT_INFO).map(([key, info]) => (\n            <div\n              key={key}\n              className={`equipment-card ${equipment.includes(key) ? 'active' : ''}`}\n              onClick={() => handleEquipmentToggle(key)}\n            >\n              <div className=\"equipment-icon\">{info.icon}</div>\n              <div className=\"equipment-name\">{info.name}</div>\n              <div className=\"equipment-desc\">{info.description}</div>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Difficulty Selection */}\n      <section>\n        <h2 className=\"section-title\">Difficulty Level</h2>\n        <select\n          className=\"form-input\"\n          value={difficulty}\n          onChange={e => setDifficulty(e.target.value)}\n          style={{ width: '100%', marginBottom: '1rem' }}\n        >\n          {Object.values(DIFFICULTY_LEVELS).map(level => (\n            <option key={level} value={level}>\n              {level.charAt(0).toUpperCase() + level.slice(1)}\n            </option>\n          ))}\n        </select>\n      </section>\n\n      {/* Generate Button */}\n      <button \n        type=\"submit\" \n        className=\"btn\"\n        disabled={isGenerating || goals.length === 0}\n      >\n        {isGenerating ? (\n          <>\n            <span className=\"spinner\" style={{ \n              display: 'inline-block',\n              width: '16px',\n              height: '16px',\n              border: '2px solid white',\n              borderTopColor: 'transparent',\n              borderRadius: '50%',\n              animation: 'spin 1s linear infinite',\n              marginRight: '0.5rem'\n            }}></span>\n            Generating your routine...\n          </>\n        ) : (\n          <span>Generate My Routine</span>\n        )}\n      </button>\n    </form>\n  )\n}\n\nexport default PreferencesForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}