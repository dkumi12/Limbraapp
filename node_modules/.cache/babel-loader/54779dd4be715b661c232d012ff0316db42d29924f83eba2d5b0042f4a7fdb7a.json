{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abami\\\\OneDrive\\\\Desktop\\\\Projects\\\\stretch app\\\\src\\\\components\\\\PreferencesForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GOALS, BODY_PARTS, DIFFICULTY_LEVELS, validateRoutinePreferences } from '../routineGenerator';\nimport { EQUIPMENT_TYPES, EQUIPMENT_INFO } from '../services/api';\nimport Icon from 'react-eva-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PreferencesForm = ({\n  onGenerate,\n  stats\n}) => {\n  _s();\n  const [duration, setDuration] = useState(10);\n  const [goals, setGoals] = useState([]);\n  const [bodyParts, setBodyParts] = useState([]);\n  const [equipment, setEquipment] = useState(['none']);\n  const [difficulty, setDifficulty] = useState(DIFFICULTY_LEVELS.BEGINNER);\n  const [energyLevel, setEnergyLevel] = useState('medium');\n  const [timeOfDay, setTimeOfDay] = useState(() => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'morning';\n    if (hour < 17) return 'midday';\n    return 'evening';\n  });\n  const [problems, setProblems] = useState([]);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const quickStartOptions = [{\n    id: 'morning',\n    icon: 'wb_sunny',\n    iconColor: '#ff9800',\n    title: 'Morning Routine',\n    subtitle: '10 min energizing',\n    preset: () => {\n      setGoals([GOALS.MORNING_WAKE_UP]);\n      setBodyParts([BODY_PARTS.FULL_BODY]);\n      setEnergyLevel('medium');\n      setDuration(10);\n      setEquipment(['none']);\n    }\n  }, {\n    id: 'desk',\n    icon: 'desktop_windows',\n    iconColor: '#2196f3',\n    title: 'Desk Break',\n    subtitle: '5 min neck & shoulders',\n    preset: () => {\n      setGoals([GOALS.DESK_BREAK]);\n      setBodyParts([BODY_PARTS.NECK, BODY_PARTS.SHOULDERS, BODY_PARTS.UPPER_BACK]);\n      setEnergyLevel('low');\n      setDuration(5);\n      setEquipment(['wall', 'chair']);\n    }\n  }, {\n    id: 'workout',\n    icon: 'fitness_center',\n    iconColor: '#9c27b0',\n    title: 'Post-Workout',\n    subtitle: '15 min recovery',\n    preset: () => {\n      setGoals([GOALS.POST_WORKOUT]);\n      setBodyParts([BODY_PARTS.LEGS, BODY_PARTS.HIPS]);\n      setEnergyLevel('low');\n      setDuration(15);\n      setEquipment(['foam_roller', 'mat']);\n    }\n  }, {\n    id: 'bedtime',\n    icon: 'bedtime',\n    iconColor: '#3f51b5',\n    title: 'Bedtime',\n    subtitle: '10 min relaxing',\n    preset: () => {\n      setGoals([GOALS.BEDTIME_RELAX]);\n      setBodyParts([BODY_PARTS.FULL_BODY]);\n      setEnergyLevel('low');\n      setDuration(10);\n      setEquipment(['mat']);\n    }\n  }];\n  const quickStartEvaIcons = {\n    morning: 'sun-outline',\n    desk: 'monitor-outline',\n    workout: 'activity-outline',\n    bedtime: 'moon-outline'\n  };\n  const goalOptions = [{\n    value: GOALS.MORNING_WAKE_UP,\n    label: 'Morning Wake-up',\n    description: 'Energize and activate your body',\n    icon: '🌅'\n  }, {\n    value: GOALS.PRE_WORKOUT,\n    label: 'Pre-workout',\n    description: 'Prepare your muscles for exercise',\n    icon: '🏋️'\n  }, {\n    value: GOALS.POST_WORKOUT,\n    label: 'Post-workout',\n    description: 'Recovery and cool down',\n    icon: '🧘'\n  }, {\n    value: GOALS.DESK_BREAK,\n    label: 'Desk Break',\n    description: 'Counter sitting posture',\n    icon: '💻'\n  }, {\n    value: GOALS.STRESS_RELIEF,\n    label: 'Relaxation',\n    description: 'Calm your mind and body',\n    icon: '🌙'\n  }, {\n    value: GOALS.BEDTIME_RELAX,\n    label: 'Bedtime Relax',\n    description: 'Prepare for restful sleep',\n    icon: '😴'\n  }, {\n    value: GOALS.PAIN_RELIEF,\n    label: 'Pain Relief',\n    description: 'Target specific discomfort',\n    icon: '🩹'\n  }, {\n    value: GOALS.FLEXIBILITY,\n    label: 'Flexibility',\n    description: 'Improve range of motion',\n    icon: '🤸'\n  }];\n  const bodyPartOptions = [{\n    value: BODY_PARTS.NECK,\n    label: 'Neck',\n    icon: '🦴'\n  }, {\n    value: BODY_PARTS.SHOULDERS,\n    label: 'Shoulders',\n    icon: '💪'\n  }, {\n    value: BODY_PARTS.UPPER_BACK,\n    label: 'Upper Back',\n    icon: '⬆️'\n  }, {\n    value: BODY_PARTS.LOWER_BACK,\n    label: 'Lower Back',\n    icon: '⬇️'\n  }, {\n    value: BODY_PARTS.CHEST,\n    label: 'Chest',\n    icon: '❤️'\n  }, {\n    value: BODY_PARTS.ARMS,\n    label: 'Arms',\n    icon: '💪'\n  }, {\n    value: BODY_PARTS.HIPS,\n    label: 'Hips',\n    icon: '🦴'\n  }, {\n    value: BODY_PARTS.LEGS,\n    label: 'Legs',\n    icon: '🦵'\n  }, {\n    value: BODY_PARTS.CALVES,\n    label: 'Calves',\n    icon: '🦶'\n  }, {\n    value: BODY_PARTS.FULL_BODY,\n    label: 'Full Body',\n    icon: '🧘'\n  }];\n  const handleGoalToggle = goal => {\n    setGoals(prev => prev.includes(goal) ? prev.filter(g => g !== goal) : [...prev, goal]);\n  };\n  const handleBodyPartToggle = bodyPart => {\n    setBodyParts(prev => prev.includes(bodyPart) ? prev.filter(bp => bp !== bodyPart) : [...prev, bodyPart]);\n  };\n  const handleEquipmentToggle = equipmentType => {\n    setEquipment(prev => {\n      if (equipmentType === 'none') {\n        return ['none'];\n      }\n      const filtered = prev.filter(e => e !== 'none');\n      return filtered.includes(equipmentType) ? filtered.filter(e => e !== equipmentType) : [...filtered, equipmentType];\n    });\n  };\n  const handleProblemToggle = problem => {\n    setProblems(prev => prev.includes(problem) ? prev.filter(p => p !== problem) : [...prev, problem]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const preferences = {\n      duration: duration * 60,\n      goals,\n      bodyParts: bodyParts.length > 0 ? bodyParts : [BODY_PARTS.FULL_BODY],\n      equipment: equipment.length === 0 ? ['none'] : equipment,\n      difficulty,\n      energyLevel,\n      timeOfDay,\n      problems\n    };\n    const validation = validateRoutinePreferences(preferences);\n    if (!validation.isValid) {\n      alert(validation.error);\n      return;\n    }\n    setIsGenerating(true);\n    try {\n      await onGenerate(preferences);\n    } catch (error) {\n      console.error('Error generating routine:', error);\n      alert('Failed to generate routine. Please try again.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const durationOptions = [5, 10, 15, 20, 30];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"preferences-form\",\n    children: [stats.totalSessions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome back! You've completed \", stats.totalSessions, \" sessions \\uD83C\\uDF89\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Quick Start (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-start-grid\",\n        children: quickStartOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-start-tag\",\n          onClick: option.preset,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: quickStartEvaIcons[option.id],\n            fill: option.iconColor,\n            width: 24,\n            height: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 500,\n                marginBottom: '0.125rem'\n              },\n              children: option.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '0.75rem',\n                color: '#64748b'\n              },\n              children: option.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"How much time do you have?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"duration-selector\",\n        children: durationOptions.map(time => /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `time-button ${duration === time ? 'active' : ''}`,\n          onClick: () => setDuration(time),\n          children: [time, \"min\"]\n        }, time, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"What's your main goal today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-input\",\n        value: goals[0] || '',\n        onChange: e => setGoals([e.target.value]),\n        style: {\n          width: '100%',\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a goal...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), goalOptions.map(goal => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: goal.value,\n          children: [goal.icon, \" \", goal.label]\n        }, goal.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Which areas to focus on?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '0.5rem 1rem',\n          marginBottom: '1rem'\n        },\n        children: bodyPartOptions.map((part, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem',\n            background: '#1e293b',\n            borderRadius: '6px',\n            padding: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: bodyParts.includes(part.value),\n            onChange: e => {\n              if (e.target.checked) {\n                setBodyParts(prev => [...prev, part.value]);\n              } else {\n                setBodyParts(prev => prev.filter(v => v !== part.value));\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [part.icon, \" \", part.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, part.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        style: {\n          marginBottom: '1rem'\n        },\n        onClick: () => setBodyParts([...bodyParts]),\n        children: \"Save Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Available Equipment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-input\",\n        value: equipment,\n        onChange: e => {\n          const selected = Array.from(e.target.selectedOptions, option => option.value);\n          setEquipment(selected.length ? selected : ['none']);\n        },\n        multiple: true,\n        style: {\n          width: '100%',\n          minHeight: '80px',\n          marginBottom: '1rem'\n        },\n        children: Object.entries(EQUIPMENT_INFO).map(([key, info]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: info.name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"Difficulty Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-input\",\n        value: difficulty,\n        onChange: e => setDifficulty(e.target.value),\n        style: {\n          width: '100%',\n          marginBottom: '1rem'\n        },\n        children: Object.values(DIFFICULTY_LEVELS).map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: level,\n          children: level.charAt(0).toUpperCase() + level.slice(1)\n        }, level, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      disabled: isGenerating || goals.length === 0,\n      children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner\",\n          style: {\n            display: 'inline-block',\n            width: '16px',\n            height: '16px',\n            border: '2px solid white',\n            borderTopColor: 'transparent',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            marginRight: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), \"Generating your routine...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Generate My Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(PreferencesForm, \"x4PLjKxZ3r8KA3QCUfxBqGC+Se8=\");\n_c = PreferencesForm;\nexport default PreferencesForm;\nvar _c;\n$RefreshReg$(_c, \"PreferencesForm\");","map":{"version":3,"names":["React","useState","GOALS","BODY_PARTS","DIFFICULTY_LEVELS","validateRoutinePreferences","EQUIPMENT_TYPES","EQUIPMENT_INFO","Icon","jsxDEV","_jsxDEV","Fragment","_Fragment","PreferencesForm","onGenerate","stats","_s","duration","setDuration","goals","setGoals","bodyParts","setBodyParts","equipment","setEquipment","difficulty","setDifficulty","BEGINNER","energyLevel","setEnergyLevel","timeOfDay","setTimeOfDay","hour","Date","getHours","problems","setProblems","isGenerating","setIsGenerating","quickStartOptions","id","icon","iconColor","title","subtitle","preset","MORNING_WAKE_UP","FULL_BODY","DESK_BREAK","NECK","SHOULDERS","UPPER_BACK","POST_WORKOUT","LEGS","HIPS","BEDTIME_RELAX","quickStartEvaIcons","morning","desk","workout","bedtime","goalOptions","value","label","description","PRE_WORKOUT","STRESS_RELIEF","PAIN_RELIEF","FLEXIBILITY","bodyPartOptions","LOWER_BACK","CHEST","ARMS","CALVES","handleGoalToggle","goal","prev","includes","filter","g","handleBodyPartToggle","bodyPart","bp","handleEquipmentToggle","equipmentType","filtered","e","handleProblemToggle","problem","p","handleSubmit","preventDefault","preferences","length","validation","isValid","alert","error","console","durationOptions","onSubmit","className","children","totalSessions","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","name","fill","width","height","style","fontWeight","marginBottom","fontSize","color","time","type","onChange","target","disabled","display","gridTemplateColumns","gap","part","idx","alignItems","background","borderRadius","padding","checked","v","selected","Array","from","selectedOptions","multiple","minHeight","Object","entries","key","info","values","level","charAt","toUpperCase","slice","border","borderTopColor","animation","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/abami/OneDrive/Desktop/Projects/stretch app/src/components/PreferencesForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { GOALS, BODY_PARTS, DIFFICULTY_LEVELS, validateRoutinePreferences } from '../routineGenerator'\nimport { EQUIPMENT_TYPES, EQUIPMENT_INFO } from '../services/api'\nimport Icon from 'react-eva-icons';\n\nconst PreferencesForm = ({ onGenerate, stats }) => {\n  const [duration, setDuration] = useState(10)\n  const [goals, setGoals] = useState([])\n  const [bodyParts, setBodyParts] = useState([])\n  const [equipment, setEquipment] = useState(['none'])\n  const [difficulty, setDifficulty] = useState(DIFFICULTY_LEVELS.BEGINNER)\n  const [energyLevel, setEnergyLevel] = useState('medium')\n  const [timeOfDay, setTimeOfDay] = useState(() => {\n    const hour = new Date().getHours()\n    if (hour < 12) return 'morning'\n    if (hour < 17) return 'midday'\n    return 'evening'\n  })\n  const [problems, setProblems] = useState([])\n  const [isGenerating, setIsGenerating] = useState(false)\n\n  const quickStartOptions = [\n    {\n      id: 'morning',\n      icon: 'wb_sunny',\n      iconColor: '#ff9800',\n      title: 'Morning Routine',\n      subtitle: '10 min energizing',\n      preset: () => {\n        setGoals([GOALS.MORNING_WAKE_UP])\n        setBodyParts([BODY_PARTS.FULL_BODY])\n        setEnergyLevel('medium')\n        setDuration(10)\n        setEquipment(['none'])\n      }\n    },\n    {\n      id: 'desk',\n      icon: 'desktop_windows',\n      iconColor: '#2196f3',\n      title: 'Desk Break',\n      subtitle: '5 min neck & shoulders',\n      preset: () => {\n        setGoals([GOALS.DESK_BREAK])\n        setBodyParts([BODY_PARTS.NECK, BODY_PARTS.SHOULDERS, BODY_PARTS.UPPER_BACK])\n        setEnergyLevel('low')\n        setDuration(5)\n        setEquipment(['wall', 'chair'])\n      }\n    },\n    {\n      id: 'workout',\n      icon: 'fitness_center',\n      iconColor: '#9c27b0',\n      title: 'Post-Workout',\n      subtitle: '15 min recovery',\n      preset: () => {\n        setGoals([GOALS.POST_WORKOUT])\n        setBodyParts([BODY_PARTS.LEGS, BODY_PARTS.HIPS])\n        setEnergyLevel('low')\n        setDuration(15)\n        setEquipment(['foam_roller', 'mat'])\n      }\n    },\n    {\n      id: 'bedtime',\n      icon: 'bedtime',\n      iconColor: '#3f51b5',\n      title: 'Bedtime',\n      subtitle: '10 min relaxing',\n      preset: () => {\n        setGoals([GOALS.BEDTIME_RELAX])\n        setBodyParts([BODY_PARTS.FULL_BODY])\n        setEnergyLevel('low')\n        setDuration(10)\n        setEquipment(['mat'])\n      }\n    }\n  ]\n\n  const quickStartEvaIcons = {\n    morning: 'sun-outline',\n    desk: 'monitor-outline',\n    workout: 'activity-outline',\n    bedtime: 'moon-outline',\n  };\n\n  const goalOptions = [\n    { \n      value: GOALS.MORNING_WAKE_UP, \n      label: 'Morning Wake-up', \n      description: 'Energize and activate your body',\n      icon: '🌅'\n    },\n    { \n      value: GOALS.PRE_WORKOUT, \n      label: 'Pre-workout', \n      description: 'Prepare your muscles for exercise',\n      icon: '🏋️'\n    },\n    { \n      value: GOALS.POST_WORKOUT, \n      label: 'Post-workout', \n      description: 'Recovery and cool down',\n      icon: '🧘'\n    },\n    { \n      value: GOALS.DESK_BREAK, \n      label: 'Desk Break', \n      description: 'Counter sitting posture',\n      icon: '💻'\n    },\n    { \n      value: GOALS.STRESS_RELIEF, \n      label: 'Relaxation', \n      description: 'Calm your mind and body',\n      icon: '🌙'\n    },\n    { \n      value: GOALS.BEDTIME_RELAX, \n      label: 'Bedtime Relax', \n      description: 'Prepare for restful sleep',\n      icon: '😴'\n    },\n    { \n      value: GOALS.PAIN_RELIEF, \n      label: 'Pain Relief', \n      description: 'Target specific discomfort',\n      icon: '🩹'\n    },\n    { \n      value: GOALS.FLEXIBILITY, \n      label: 'Flexibility', \n      description: 'Improve range of motion',\n      icon: '🤸'\n    }\n  ]\n\n  const bodyPartOptions = [\n    { value: BODY_PARTS.NECK, label: 'Neck', icon: '🦴' },\n    { value: BODY_PARTS.SHOULDERS, label: 'Shoulders', icon: '💪' },\n    { value: BODY_PARTS.UPPER_BACK, label: 'Upper Back', icon: '⬆️' },\n    { value: BODY_PARTS.LOWER_BACK, label: 'Lower Back', icon: '⬇️' },\n    { value: BODY_PARTS.CHEST, label: 'Chest', icon: '❤️' },\n    { value: BODY_PARTS.ARMS, label: 'Arms', icon: '💪' },\n    { value: BODY_PARTS.HIPS, label: 'Hips', icon: '🦴' },\n    { value: BODY_PARTS.LEGS, label: 'Legs', icon: '🦵' },\n    { value: BODY_PARTS.CALVES, label: 'Calves', icon: '🦶' },\n    { value: BODY_PARTS.FULL_BODY, label: 'Full Body', icon: '🧘' }\n  ]\n\n  const handleGoalToggle = (goal) => {\n    setGoals(prev => \n      prev.includes(goal) \n        ? prev.filter(g => g !== goal)\n        : [...prev, goal]\n    )\n  }\n\n  const handleBodyPartToggle = (bodyPart) => {\n    setBodyParts(prev => \n      prev.includes(bodyPart) \n        ? prev.filter(bp => bp !== bodyPart)\n        : [...prev, bodyPart]\n    )\n  }\n\n  const handleEquipmentToggle = (equipmentType) => {\n    setEquipment(prev => {\n      if (equipmentType === 'none') {\n        return ['none']\n      }\n      const filtered = prev.filter(e => e !== 'none')\n      return filtered.includes(equipmentType)\n        ? filtered.filter(e => e !== equipmentType)\n        : [...filtered, equipmentType]\n    })\n  }\n\n  const handleProblemToggle = (problem) => {\n    setProblems(prev => \n      prev.includes(problem) \n        ? prev.filter(p => p !== problem)\n        : [...prev, problem]\n    )\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    \n    const preferences = {\n      duration: duration * 60,\n      goals,\n      bodyParts: bodyParts.length > 0 ? bodyParts : [BODY_PARTS.FULL_BODY],\n      equipment: equipment.length === 0 ? ['none'] : equipment,\n      difficulty,\n      energyLevel,\n      timeOfDay,\n      problems\n    }\n\n    const validation = validateRoutinePreferences(preferences)\n    if (!validation.isValid) {\n      alert(validation.error)\n      return\n    }\n\n    setIsGenerating(true)\n    try {\n      await onGenerate(preferences)\n    } catch (error) {\n      console.error('Error generating routine:', error)\n      alert('Failed to generate routine. Please try again.')\n    } finally {\n      setIsGenerating(false)\n    }\n  }\n\n  const durationOptions = [5, 10, 15, 20, 30]\n\n  return (\n    <form onSubmit={handleSubmit} className=\"preferences-form\">\n      {/* Stats Summary */}\n      {stats.totalSessions > 0 && (\n        <div className=\"stats-summary\">\n          <p>Welcome back! You've completed {stats.totalSessions} sessions 🎉</p>\n        </div>\n      )}\n\n      {/* Quick Start Section */}\n      <section>\n        <h2 className=\"section-title\">Quick Start (Optional)</h2>\n        <div className=\"quick-start-grid\">\n          {quickStartOptions.map(option => (\n            <div\n              key={option.id}\n              className=\"quick-start-tag\"\n              onClick={option.preset}\n            >\n              <Icon name={quickStartEvaIcons[option.id]} fill={option.iconColor} width={24} height={24} />\n              <div>\n                <p style={{ fontWeight: 500, marginBottom: '0.125rem' }}>{option.title}</p>\n                <p style={{ fontSize: '0.75rem', color: '#64748b' }}>{option.subtitle}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Duration Selection */}\n      <section>\n        <h2 className=\"section-title\">How much time do you have?</h2>\n        <div className=\"duration-selector\">\n          {durationOptions.map(time => (\n            <button\n              key={time}\n              type=\"button\"\n              className={`time-button ${duration === time ? 'active' : ''}`}\n              onClick={() => setDuration(time)}\n            >\n              {time}min\n            </button>\n          ))}\n        </div>\n      </section>\n\n      {/* Goals Selection */}\n      <section>\n        <h2 className=\"section-title\">What's your main goal today?</h2>\n        <select\n          className=\"form-input\"\n          value={goals[0] || ''}\n          onChange={e => setGoals([e.target.value])}\n          style={{ width: '100%', marginBottom: '1rem' }}\n        >\n          <option value=\"\" disabled>Select a goal...</option>\n          {goalOptions.map(goal => (\n            <option key={goal.value} value={goal.value}>\n              {goal.icon} {goal.label}\n            </option>\n          ))}\n        </select>\n      </section>\n\n      {/* Body Parts Selection */}\n      <section>\n        <h2 className=\"section-title\">Which areas to focus on?</h2>\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.5rem 1rem', marginBottom: '1rem' }}>\n          {bodyPartOptions.map((part, idx) => (\n            <label key={part.value} style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', background: '#1e293b', borderRadius: '6px', padding: '0.5rem' }}>\n              <input\n                type=\"checkbox\"\n                checked={bodyParts.includes(part.value)}\n                onChange={e => {\n                  if (e.target.checked) {\n                    setBodyParts(prev => [...prev, part.value])\n                  } else {\n                    setBodyParts(prev => prev.filter(v => v !== part.value))\n                  }\n                }}\n              />\n              <span>{part.icon} {part.label}</span>\n            </label>\n          ))}\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn\"\n          style={{ marginBottom: '1rem' }}\n          onClick={() => setBodyParts([...bodyParts])}\n        >\n          Save Selection\n        </button>\n      </section>\n\n      {/* Equipment Selection */}\n      <section>\n        <h2 className=\"section-title\">Available Equipment</h2>\n        <select\n          className=\"form-input\"\n          value={equipment}\n          onChange={e => {\n            const selected = Array.from(e.target.selectedOptions, option => option.value)\n            setEquipment(selected.length ? selected : ['none'])\n          }}\n          multiple\n          style={{ width: '100%', minHeight: '80px', marginBottom: '1rem' }}\n        >\n          {Object.entries(EQUIPMENT_INFO).map(([key, info]) => (\n            <option key={key} value={key}>\n              {info.name}\n            </option>\n          ))}\n        </select>\n      </section>\n\n      {/* Difficulty Selection */}\n      <section>\n        <h2 className=\"section-title\">Difficulty Level</h2>\n        <select\n          className=\"form-input\"\n          value={difficulty}\n          onChange={e => setDifficulty(e.target.value)}\n          style={{ width: '100%', marginBottom: '1rem' }}\n        >\n          {Object.values(DIFFICULTY_LEVELS).map(level => (\n            <option key={level} value={level}>\n              {level.charAt(0).toUpperCase() + level.slice(1)}\n            </option>\n          ))}\n        </select>\n      </section>\n\n      {/* Generate Button */}\n      <button \n        type=\"submit\" \n        className=\"btn\"\n        disabled={isGenerating || goals.length === 0}\n      >\n        {isGenerating ? (\n          <>\n            <span className=\"spinner\" style={{ \n              display: 'inline-block',\n              width: '16px',\n              height: '16px',\n              border: '2px solid white',\n              borderTopColor: 'transparent',\n              borderRadius: '50%',\n              animation: 'spin 1s linear infinite',\n              marginRight: '0.5rem'\n            }}></span>\n            Generating your routine...\n          </>\n        ) : (\n          <span>Generate My Routine</span>\n        )}\n      </button>\n    </form>\n  )\n}\n\nexport default PreferencesForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}